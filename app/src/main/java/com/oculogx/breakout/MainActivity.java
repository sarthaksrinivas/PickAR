package com.oculogx.breakout;

import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.media.AudioManager;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;

import com.google.android.glass.media.Sounds;
import com.google.android.glass.widget.CardBuilder;
import com.google.android.glass.widget.CardScrollAdapter;
import com.google.android.glass.widget.CardScrollView;

/**
 * An {@link Activity} showing a tuggable "Hello World!" card.
 * <p>
 * The main content view is composed of a one-card {@link CardScrollView} that provides tugging
 * feedback to the user when swipe gestures are detected.
 * If your Glassware intends to intercept swipe gestures, you should set the content view directly
 * and use a {@link com.google.android.glass.touchpad.GestureDetector}.
 *
 * @see <a href="https://developers.google.com/glass/develop/gdk/touch">GDK Developer Guide</a>
 */
public class MainActivity extends Activity {

    /**
     * {@link CardScrollView} to use as the main content view.
     */
    private CardScrollView mCardScroller;

    /**
     * "Hello World!" {@link View} generated by {@link #buildView()}.
     */
    private View mView;

    @Override
    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);

        mView = buildView();

        mCardScroller = new CardScrollView(this);
        mCardScroller.setAdapter(new CardScrollAdapter() {
            @Override
            public int getCount() {
                return 1;
            }

            @Override
            public Object getItem(int position) {
                return mView;
            }

            @Override
            public View getView(int position, View convertView, ViewGroup parent) {
                return mView;
            }

            @Override
            public int getPosition(Object item) {
                if (mView.equals(item)) {
                    return 0;
                }
                return AdapterView.INVALID_POSITION;
            }
        });
        // Handle the TAP event.
        mCardScroller.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                // Plays disallowed sound to indicate that TAP actions are not supported.
                AudioManager am = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
                am.playSoundEffect(Sounds.DISALLOWED);
            }
        });
        setContentView(mCardScroller);
    }

    @Override
    protected void onResume() {
        super.onResume();
        mCardScroller.activate();
    }

    @Override
    protected void onPause() {
        mCardScroller.deactivate();
        super.onPause();
    }

    /**
     * Builds a Glass styled "Hello World!" view using the {@link CardBuilder} class.
     */
    private View buildView() {
        CardBuilder card = new CardBuilder(this, CardBuilder.Layout.TEXT);

        Bitmap b = Bitmap.createBitmap(640, 360, Bitmap.Config.ARGB_8888);
        b.eraseColor(Color.BLACK);
        
        //added variables here to represent the grid width and height for generalizing-sake
        int gridWidth = 40;
        int gridHeight = 40;
        
        for (int i = 0 ; i < b.getWidth(); i++) {
            for (int j = 0; j < b.getHeight(); j++) {
            
            //can we combine these first two conditionals using ||
                if (j % gridHeight == 0) {
                    b.setPixel(i, j, Color.WHITE);
                }
                if (i % gridWidth == 0) {
                    b.setPixel(i, j, Color.WHITE);
                }

                //create colored racks within lines from pix 40-640 by 80-280, every other
                //replace with something similar to 'in range' in python
                if(i > 40 && i < 640 && j > 80 && j < 120){
                    b.setPixel(i, j, Color.MAGENTA);
                }
                if (i > 40 && i < 640 && j > 160 && j < 200){
                    b.setPixel(i, j, Color.MAGENTA);
                }
                if (i > 40 && i < 640 && j > 240 && j < 280){
                    b.setPixel(i, j, Color.MAGENTA);
                }
        }
        card.addImage(b);
        return card.getView();
    }
}
